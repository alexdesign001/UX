<Window x:Class="ThemeBrowser.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ThemeBrowser"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type local:MainWindowViewModel}}"
        x:Name="root"
        Title="{Binding Title}"
        Width="1200"
        Height="800"
        TextOptions.TextFormattingMode="Display"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        IsEnabled="{Binding IsEnabled}"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
  <Window.Resources>
    <local:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>

    <Style x:Key="VertSplitter" TargetType="GridSplitter">
      <Setter Property="Width" Value="6"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Background" Value="Transparent"/>
    </Style>

    <DataTemplate x:Key="ThemePropertyItem" DataType="{x:Type local:ThemePropertyViewModel}">
      <TextBlock Text="{Binding PropertyId}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:NamedItemContainer}">
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ThemePropertyComparisonViewModel}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
          <TextBlock Text="{Binding PropertyId}"/>
          <TextBlock Text="{Binding DisplayName}"/>
          <TextBlock Text="{Binding PrimitiveType}"/>
        </StackPanel>
        <ContentControl Grid.Row="1" Grid.Column="0" Content="{Binding OldProperty.Value}"/>
        <ContentControl Grid.Row="1" Grid.Column="1" Content="{Binding NewProperty.Value}"/>
      </Grid>
    </DataTemplate>

    <local:ColorToBrushConverter x:Key="ColorToBrushConverter" IgnoreAlpha="True"/>

    <DataTemplate DataType="{x:Type Color}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle Width="16" Height="16" Fill="{Binding Converter={StaticResource ColorToBrushConverter}}"
                   Stroke="#FF999999" StrokeThickness="1"/>
        <local:SelectableTextBlock Grid.Column="1" Text="{Binding Mode=OneWay}" Margin="3,0,0,0"/>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:HighContrastColor}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle Width="16" Height="16"
                   Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                   Stroke="#FF999999" StrokeThickness="1"/>
        <local:SelectableTextBlock Grid.Column="1" Text="{Binding Mode=OneWay}" Margin="3,0,0,0"/>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:SimplifiedImageGroup}">
      <ItemsControl ItemsSource="{Binding Images}">
        <ItemsControl.ItemTemplate>
          <DataTemplate DataType="{x:Type local:SimplifiedImage}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Border BorderBrush="#FF999999" BorderThickness="1"
                      Width="16" Height="16">
                <Border Background="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                        BorderBrush="{Binding BorderColor, Converter={StaticResource ColorToBrushConverter}}"
                        BorderThickness="3"/>
              </Border>
              <local:SelectableTextBlock Grid.Column="1" Text="{Binding Mode=OneWay}" Margin="3,0,0,0"/>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:HighContrastSimplifiedImageGroup}">
      <ItemsControl ItemsSource="{Binding Images}">
        <ItemsControl.ItemTemplate>
          <DataTemplate DataType="{x:Type local:HighContrastSimplifiedImage}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Border Grid.Column="0" BorderBrush="#FF999999" BorderThickness="1"
                      Width="16" Height="16">
                <Border Background="{Binding BackgroundColor.Color, Converter={StaticResource ColorToBrushConverter}}"
                        BorderBrush="{Binding BorderColor.Color, Converter={StaticResource ColorToBrushConverter}}"
                        BorderThickness="3"/>
              </Border>
              <local:SelectableTextBlock Grid.Column="1" Text="{Binding Mode=OneWay}" Margin="3,0,0,0"/>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ThemeBitmapViewModel}">
      <Grid x:Name="templateRoot" Background="Transparent">
        <Grid.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Save Image…"
                      Command="{Binding Data.SaveImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="Save Image (Unpremultiplied)…"
                      Command="{Binding Data.SaveUnpremultipliedImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="Trace Image…"
                      Command="{Binding Data.TraceImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="Preview Image…"
                      Command="{Binding Data.PreviewImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
          </ContextMenu>
        </Grid.ContextMenu>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
          <TextBlock>
            [Id: <Run Text="{Binding ImageId, Mode=OneWay}"/>]
            <Run Text="{Binding Bitmap.PixelWidth, Mode=OneWay}"/>x<Run Text="{Binding Bitmap.PixelHeight, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock Text=" Zoom:"/>
          <Slider x:Name="ZoomSlider" Value="1" Minimum="1" Maximum="20" Width="100"
                  IsSnapToTickEnabled="True" TickFrequency="1"/>
        </StackPanel>
        <Border Grid.Row="1" BorderThickness="1" BorderBrush="#CCCCCC"
                Background="{StaticResource CheckeredBrush}" Margin="5"
                HorizontalAlignment="Left" VerticalAlignment="Top">
          <Image x:Name="image" Source="{Binding Bitmap}" HorizontalAlignment="Left"
                 Stretch="Uniform" RenderOptions.BitmapScalingMode="NearestNeighbor">
            <i:Interaction.Behaviors>
              <local:ImageColorPickerBehavior x:Name="imageColorPicker"/>
            </i:Interaction.Behaviors>
            <Image.Width>
              <MultiBinding Converter="{StaticResource DoubleMultiplyConverter}">
                <MultiBinding.Bindings>
                  <Binding Path="Bitmap.Width"/>
                  <Binding ElementName="ZoomSlider" Path="Value"/>
                </MultiBinding.Bindings>
              </MultiBinding>
            </Image.Width>
          </Image>
        </Border>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesTemplate" DataType="{x:Type local:ThemePropertyContainer}">
      <local:PropertyGrid/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemeClassViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemePartViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemeStateViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ImageSource}">
      <Image Source="{Binding}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ThemeFileViewModel}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <Border>
          <StackPanel Margin="7">
            <TextBlock Text="{Binding FileName, StringFormat='File: {0}'}" ToolTip="{Binding FilePath}"/>
            <TextBlock Text="{Binding Version, StringFormat='Version: {0}'}"/>
            <TextBlock Text="{Binding VariantMap.Name, StringFormat='Variant.Name: {0}'}"/>
            <TextBlock Text="{Binding VariantMap.Size, StringFormat='Variant.Size: {0}'}"/>
            <TextBlock Text="{Binding VariantMap.Color, StringFormat='Variant.Color: {0}'}"/>
          </StackPanel>
        </Border>
        <TreeView Grid.Row="1" x:Name="treeView"
                  ItemsSource="{Binding Classes}"
                  BorderThickness="0"
                  ContextMenuOpening="OnTreeViewContextMenuOpening"
                  SelectedItemChanged="OnSelectedItemChanged">
          <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type local:ThemeClassViewModel}"
                                        ItemsSource="{Binding Children}">
              <TextBlock Text="{Binding Name, Mode=OneWay}"/>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:ThemePartViewModel}"
                                        ItemsSource="{Binding States}">
              <TextBlock Text="{Binding DisplayName}"/>
              <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsDefined, Mode=OneTime}" Value="False">
                  <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </DataTrigger>
              </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:NamedItemContainer}"
                                        ItemsSource="{Binding Items}">
              <TextBlock Text="{Binding Name, Mode=OneWay}"/>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type local:ThemeStateViewModel}">
              <TextBlock Text="{Binding DisplayName}"/>
              <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsDefined, Mode=OneTime}" Value="False">
                  <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </DataTrigger>
              </DataTemplate.Triggers>
            </DataTemplate>
          </TreeView.Resources>
        </TreeView>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ThemeFileComparisonViewModel}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <Border>
          <StackPanel Margin="7">
            <TextBlock Text="{Binding OldThemeFile.FileName, StringFormat='Old File: {0}'}" ToolTip="{Binding OldThemeFile.FilePath}"/>
            <TextBlock Text="{Binding OldThemeFile.Version, StringFormat='Version: {0}'}"/>
            <TextBlock Text="{Binding OldThemeFile.VariantMap.Name, StringFormat='Variant.Name: {0}'}"/>
            <TextBlock Text="{Binding OldThemeFile.VariantMap.Size, StringFormat='Variant.Size: {0}'}"/>
            <TextBlock Text="{Binding OldThemeFile.VariantMap.Color, StringFormat='Variant.Color: {0}'}"/>
            <TextBlock Text="{Binding NewThemeFile.FileName, StringFormat='New File: {0}'}" ToolTip="{Binding NewThemeFile.FilePath}"/>
            <TextBlock Text="{Binding NewThemeFile.Version, StringFormat='Version: {0}'}"/>
            <TextBlock Text="{Binding NewThemeFile.VariantMap.Name, StringFormat='Variant.Name: {0}'}"/>
            <TextBlock Text="{Binding NewThemeFile.VariantMap.Size, StringFormat='Variant.Size: {0}'}"/>
            <TextBlock Text="{Binding NewThemeFile.VariantMap.Color, StringFormat='Variant.Color: {0}'}"/>
          </StackPanel>
        </Border>
        <TreeView Grid.Row="1" x:Name="treeView"
                  ItemsSource="{Binding Classes}"
                  BorderThickness="0"
                  ContextMenuOpening="OnTreeViewContextMenuOpening"
                  SelectedItemChanged="OnSelectedItemChanged">
          <TreeView.Resources>
            <local:ComparisonResultToBrushConverter x:Key="ComparisonResultToBrushConverter"/>
            <HierarchicalDataTemplate DataType="{x:Type local:ThemeClassComparisonViewModel}"
                                      ItemsSource="{Binding Parts}">
              <TextBlock Text="{Binding DisplayName}" Foreground="{Binding Comparison, Converter={StaticResource ComparisonResultToBrushConverter}}"/>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:ThemePartComparisonViewModel}"
                                      ItemsSource="{Binding States}">
              <TextBlock Text="{Binding DisplayName}" Foreground="{Binding Comparison, Converter={StaticResource ComparisonResultToBrushConverter}}"/>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type local:ThemeStateComparisonViewModel}">
              <TextBlock Text="{Binding DisplayName}" Foreground="{Binding Comparison, Converter={StaticResource ComparisonResultToBrushConverter}}"/>
            </DataTemplate>
          </TreeView.Resources>
        </TreeView>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesComparisonTemplate" DataType="{x:Type local:ThemePropertyComparisonContainer}">
      <Grid>
        <DataGrid ItemsSource="{Binding Properties}" IsReadOnly="True"
                  AutoGenerateColumns="False" GridLinesVisibility="None">
          <DataGrid.Columns>
            <DataGridTextColumn Header="Id" Binding="{Binding DisplayName}"/>
            <DataGridTextColumn Header="Type" Binding="{Binding PrimitiveType}"/>
            <DataGridTemplateColumn Header="Old Value" Width="*">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <ContentPresenter Content="{Binding OldProperty.Value}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="New Value" Width="*">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <ContentPresenter Content="{Binding NewProperty.Value}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
          </DataGrid.Columns>
        </DataGrid>
      </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemeClassComparisonViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesComparisonTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemePartComparisonViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesComparisonTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemeStateComparisonViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesComparisonTemplate}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ProgressInfo}">
      <Border Padding="10" Background="#EEEEEEEE" BorderThickness="1"
              BorderBrush="#EECCCCCC" HorizontalAlignment="Center"
              VerticalAlignment="Center"
              MinWidth="300">
        <StackPanel>
          <TextBlock Text="{Binding TaskName}" Margin="0,0,0,6"/>
          <ProgressBar IsIndeterminate="True" BorderThickness="0" Height="4"
                       Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                       Background="Transparent"/>
        </StackPanel>
      </Border>
    </DataTemplate>
    <s:Boolean x:Key="True">true</s:Boolean>
    <s:Boolean x:Key="False">False</s:Boolean>
  </Window.Resources>
  <i:Interaction.Behaviors>
    <local:ShowProgressAdornerBehavior Progress="{Binding TaskProgress}"/>
  </i:Interaction.Behaviors>
  <DockPanel>
    <Menu DockPanel.Dock="Top">
      <MenuItem Header="_File">
        <MenuItem Header="_Open…" Command="{Binding OpenCommand}" CommandParameter="{StaticResource False}"/>
        <MenuItem Header="_Open High Contrast…" Command="{Binding OpenCommand}" CommandParameter="{StaticResource True}"/>
        <MenuItem Header="_Compare…" Command="{Binding CompareCommand}" CommandParameter="{StaticResource False}"/>
        <MenuItem Header="_Compare High Contrast…" Command="{Binding CompareCommand}" CommandParameter="{StaticResource True}">
        </MenuItem>
        <MenuItem Header="_Dump loaded theme…" Command="{Binding DumpLoadedThemeCommand}"/>
        <MenuItem Header="_Dump system theme…" Command="{Binding DumpSystemThemeCommand}"/>
        <Separator/>
        <MenuItem Header="E_xit" Command="{Binding ExitCommand}"/>
      </MenuItem>
    </Menu>

    <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="2*"/>
      </Grid.ColumnDefinitions>
      <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
              BorderThickness="0,0,1,0"
              BorderBrush="{Binding BorderBrush, ElementName=tabControl}">
        <ContentControl Content="{Binding ThemeFile}"/>
      </Border>

      <GridSplitter Grid.Row="0" Grid.Column="1" Style="{StaticResource VertSplitter}"/>

      <TabControl x:Name="tabControl" Grid.Row="0" Grid.Column="2"
                  BorderThickness="1,1,0,0">
        <TabItem Header="Selected">
          <ContentPresenter Content="{Binding Content}"/>
        </TabItem>
        <TabItem Header="All Properties">
          <DataGrid ItemsSource="{Binding AllProperties}" IsReadOnly="True"
                    AutoGenerateColumns="False"
                    ScrollViewer.CanContentScroll="False">
            <DataGrid.Columns>
              <DataGridTextColumn Header="Id" Binding="{Binding PropId}"/>
              <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
              <DataGridTextColumn Header="Origin" Binding="{Binding Origin}"/>
              <DataGridTemplateColumn Header="Value" ClipboardContentBinding="{Binding Value}">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <ContentControl Content="{Binding Value}"/>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
            </DataGrid.Columns>
          </DataGrid>
        </TabItem>
        <TabItem Header="Transitions">
          <DataGrid ItemsSource="{Binding TransitionDurations}" IsReadOnly="True"/>
        </TabItem>
      </TabControl>
    </Grid>
  </DockPanel>
</Window>
